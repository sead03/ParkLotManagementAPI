// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ParkLotManagementAPI.EfCore;

#nullable disable

namespace ParkLotManagementAPI.Migrations
{
    [DbContext(typeof(EF_DataContext))]
    [Migration("20230814114647_AddedIsDeletedToSubscriptions")]
    partial class AddedIsDeletedToSubscriptions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("ParkLotManagementAPI.EfCore.DailyLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<int?>("DailyLogsId")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("checkIn")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("checkOut")
                        .HasColumnType("time without time zone");

                    b.Property<int>("code")
                        .HasColumnType("integer");

                    b.Property<int>("price")
                        .HasColumnType("integer");

                    b.Property<int>("subscriptionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DailyLogsId");

                    b.ToTable("dailylogs");
                });

            modelBuilder.Entity("ParkLotManagementAPI.EfCore.ParkSpots", b =>
                {
                    b.Property<int>("ParkSpotsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("ParkSpotsid"));

                    b.Property<int>("freeSpots")
                        .HasColumnType("integer");

                    b.Property<int?>("reservedSpots")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int>("totalSpots")
                        .HasColumnType("integer");

                    b.HasKey("ParkSpotsid");

                    b.ToTable("parkSpots");
                });

            modelBuilder.Entity("ParkLotManagementAPI.EfCore.Subscribers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("birthday")
                        .HasColumnType("date");

                    b.Property<int>("cardNumberId")
                        .HasColumnType("integer");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("phoneNumber")
                        .HasColumnType("integer");

                    b.Property<string>("plateNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("subscribers");
                });

            modelBuilder.Entity("ParkLotManagementAPI.EfCore.Subscriptions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<int>("code")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("endDate")
                        .HasColumnType("date");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("price")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("startDate")
                        .HasColumnType("date");

                    b.Property<int>("subscriberId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("subscriptions");
                });

            modelBuilder.Entity("ParkLotManagementAPI.EfCore.WeekdayPricePlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<int>("dailyPrice")
                        .HasColumnType("integer");

                    b.Property<int>("hourlyPrice")
                        .HasColumnType("integer");

                    b.Property<int>("minimumHours")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("weekdaypriceplan");
                });

            modelBuilder.Entity("ParkLotManagementAPI.EfCore.WeekendPricePlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<int>("dailyPrice")
                        .HasColumnType("integer");

                    b.Property<int>("hourlyPrice")
                        .HasColumnType("integer");

                    b.Property<int>("minimumHours")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("weekendpriceplan");
                });

            modelBuilder.Entity("ParkLotManagementAPI.EfCore.DailyLogs", b =>
                {
                    b.HasOne("ParkLotManagementAPI.EfCore.DailyLogs", null)
                        .WithMany("dailylogs")
                        .HasForeignKey("DailyLogsId");
                });

            modelBuilder.Entity("ParkLotManagementAPI.EfCore.DailyLogs", b =>
                {
                    b.Navigation("dailylogs");
                });
#pragma warning restore 612, 618
        }
    }
}
